;; A Mandelbrot written in a more modern Harlan.
;;
;; This one is in color.

(module
  (import graphics)

  (extern nanotime () -> u64)

  (define-datatype Complex
    (complex float float))

  (define (complex-add a b)
    (match a
      ((complex ar ai)
       (match b
         ((complex br bi)
          (complex (+ ar br) (+ ai bi)))))))

  (define (complex-mul a b)
    (match a
      ((complex ar ai)
       (match b
         ((complex br bi)
          (complex (- (* ar br) (* ai bi))
                   (+ (* ar bi) (* ai br))))))))
  
  (define (complex-mag2 c)
    (match c
      ((complex r i)
       (+ (* r r) (* i i)))))

  (define (make-color c)
    (point3i 0 0 c))
  
  (define (main)
    (let ((start (nanotime))
          (size 256))
      (let ((img (kernel ((i (iota size)))
                   (kernel ((j (iota size)))
                     (let ((c (complex
                               (- (/ (int->float j)
                                     (/ (int->float size) 2))
                                  1.5)
                               (- (/ (int->float i)
                                     (/ (int->float size) 2))
                                  1.0)))
                           (x (complex 0 0))
                           (idx 0)
                           (escape 0))
                       (while (< idx 256)
                         (set! x (complex-add (complex-mul x x) c))
                         (if (< (complex-mag2 x) 4.0)
                             (set! escape idx))
                         (set! idx (+ idx 1)))
                       (make-color escape))))))
        (let ((stop (nanotime)))
          (write-ppm "test.bin/mandelbrot.ppm" img)
          (print "Time to generate Mandelbrot Set in milliseconds:\n")
          (print (/ (- stop start) 1000000))
          (print "\n")
          0)))))
