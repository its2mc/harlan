(%testspec
 (%tags bench))

(module

  (extern nanotime () -> u64)
  
  (define-datatype point3_t
    (point3 float float float))

  (define-macro take ()
    ((_ n v)
     (kernel ((i (iota n)))
       (vector-ref v i))))
  
  ;; The points don't really matter. This will just make a bunch.
  (define (make-points N)
    (kernel ((i (iota N)))
      (point3 (int->float i)
              (int->float i)
              (int->float i))))

  (define (point-diff x y)
    (match x
      ((point3 a b c)
       (match y
         ((point3 d e f)
          (point3 (- a d) (- b e) (- c f)))))))

  (define (point-add x y)
    (match x
      ((point3 a b c)
       (match y
         ((point3 x y z)
          (point3 (+ a x) (+ b y) (+ c z)))))))
  
  (define (point-div a y)
    (match a
      ((point3 a b c)
       (point3 (/ a y) (/ b y) (/ c y)))))

  (define (point-mag p)
    (match p
      ((point3 a b c)
       (sqrt (+ (* a a) (+ (* b b) (* c c)))))))

  (define (nbody bodies)
    (kernel ((i bodies))
      (reduce point-add
        (kernel ((j bodies))
          (let* ((diff (point-diff j i))
                 (d (point-mag diff)))
            (if (< 0 d)
                (point-div diff (* (* d d) d))
                (point3 0 0 0)))))))

  (define (bench-length len)
    (let* ((bodies (make-points len))
           (start (nanotime))
           (forces (nbody bodies))
           (stop (nanotime)))
      (print len)
      (print "\t")
      ; (print (/ (- stop start) 1000))
      (println* "\nSELFTIMED: " (/ (u64->float (/ (- stop start) 1000)) 1e6))
      (print "\n")
      (println "First 10 bodies:")
      (println (take 10 bodies))
      (println "First 10 forces:")
      (println (take 10 forces))))
  
  (define (main)
    ; (for (i 1 66)
    ;   (bench-length (* i 1000)))

    ;; Argument is the number of bodies
    (let* ((args (command-line))
           (size (if (> (length args) 1)
                     (parse-str->int (vector-ref args 1) -99) 10)))
      (println* "Running benchmark for size " size ", command line args were: " args)
      (bench-length (* size 1000))
      )

    0)
  
  )
