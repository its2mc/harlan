;; code for adding two vectors, from Harlan proposal

(module
  (extern nanotime () -> u64)
  (extern rand () -> int)
  (define (main)
    (let ((X (vector 1 2 3 4))
          (Y (vector 5 1 1 7)))
      (print (rand))
      (let ((Z (kernel ((x X) (y Y))
                 (+ x y))))
        (println Z)
        (assert (= (vector-ref Z 0) 6))
        (assert (= (vector-ref Z 1) 3))
        (assert (= (vector-ref Z 2) 4))
        (assert (= (vector-ref Z 3) 11))
        0))))
