;; This isn't really transpose-for anymore. It's just transpose, since
;; it uses kernels.

(%testspec
 (%tags xfail))

(module
  (define (main)
    (let ((A (vector
              (vector 1 2 3 4)
              (vector 1 2 3 4))))
      (let ((B (kernel ((j (iota (length (vector-ref A 0)))))
                 (kernel ((i (iota (length A))))
                   (vector-ref (vector-ref A i) j)))))
        (println B)
        (assert (= 1 (vector-ref (vector-ref B 0) 0)))
        (assert (= 1 (vector-ref (vector-ref B 0) 1)))
        (assert (= 2 (vector-ref (vector-ref B 1) 0)))
        (assert (= 2 (vector-ref (vector-ref B 1) 1)))
        (assert (= 3 (vector-ref (vector-ref B 2) 0)))
        (assert (= 3 (vector-ref (vector-ref B 2) 1)))
        (assert (= 4 (vector-ref (vector-ref B 3) 0)))
        (assert (= 4 (vector-ref (vector-ref B 3) 1)))))
    0))

