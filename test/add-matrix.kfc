(module
  (define (main)
    (let ((A (vector (vector 1 2 3)
               (vector 4 5 6)
               (vector 7 8 9)))
          (B (vector (vector 9 8 7)
               (vector 6 5 4)
               (vector 3 2 1))))
      (let ((C (kernel ((Arow A) (Brow B))
                 (kernel ((a Arow) (b Brow))
                   (+ a b)))))
        (println C)
        (for (i 0 3)
          (for (j 0 3)
            (assert (= (vector-ref (vector-ref C i) j) 10))))))
    0))
