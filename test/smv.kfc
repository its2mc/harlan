;; Sparse matrix-vector

(module
  (define (main)
    (let ((Ai (vector
               (vector 0)
               (vector 1)
               (vector 2)
               (vector 3)))
          (Av (vector
               (vector 1)
               (vector 1)
               (vector 1)
               (vector 1)))
          (X (vector 1 2 3 4)))
      (let ((Y (kernel ((is Ai) (vs Av))
                 (reduce +
                   (kernel ((i is) (v vs))
                     (* v (vector-ref X i)))))))
        (assert (= X Y))
        0))))
